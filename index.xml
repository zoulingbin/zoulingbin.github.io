<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>邹灵彬的博客</title>
        <link>https://zoulingbin.github.io/</link>
        <description>邹灵彬的博客</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><lastBuildDate>Sat, 14 May 2022 12:45:48 &#43;0800</lastBuildDate>
            <atom:link href="https://zoulingbin.github.io/index.xml" rel="self" type="application/rss+xml" />
        <item>
    <title>分布式缘何而起(01)</title>
    <link>https://zoulingbin.github.io/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%98%E4%BD%95%E8%80%8C%E8%B5%B7/</link>
    <pubDate>Sat, 14 May 2022 12:45:48 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://zoulingbin.github.io/posts/%E5%88%86%E5%B8%83%E5%BC%8F%E7%BC%98%E4%BD%95%E8%80%8C%E8%B5%B7/</guid>
    <description><![CDATA[]]></description>
</item><item>
    <title>Raft算法原理</title>
    <link>https://zoulingbin.github.io/posts/raft/</link>
    <pubDate>Wed, 23 Feb 2022 11:58:15 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://zoulingbin.github.io/posts/raft/</guid>
    <description><![CDATA[记录raft原理的个人理解]]></description>
</item><item>
    <title>RPC实战与核心原理（一）</title>
    <link>https://zoulingbin.github.io/posts/rpc1/</link>
    <pubDate>Wed, 16 Feb 2022 17:44:25 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://zoulingbin.github.io/posts/rpc1/</guid>
    <description><![CDATA[《RPC实战与核心原理》阅读笔记（一）]]></description>
</item><item>
    <title>Once的用法与实现</title>
    <link>https://zoulingbin.github.io/posts/once/</link>
    <pubDate>Fri, 03 Dec 2021 17:10:32 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://zoulingbin.github.io/posts/once/</guid>
    <description><![CDATA[sync.Once用法记录]]></description>
</item><item>
    <title>pprof学习笔记</title>
    <link>https://zoulingbin.github.io/posts/pprof/</link>
    <pubDate>Thu, 09 Sep 2021 17:00:06 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://zoulingbin.github.io/posts/pprof/</guid>
    <description><![CDATA[什么是pprof pprof是用于可视化和分析性能分析数据的工具，pprof以pprof.proto读取分析样本的集合，并生成报告以可书画并帮助分析数据。 而pprof.proto是一个 protobuf的描述文件，它描述了一组callstack和symbolization信息，作用是统计分析的一组采样的调用栈。 一般来说，性能分析主要关注CPU，内存，磁盘IO，网络这些指标。
pprof有一下4种类型：
 CPU profiling（cpu性能分析）：用于分析函数或方法的执行耗时； Memory profiling：用于分析程序的内存占用情况； Block profiling：用于记录goroutine在等待共享资源花费的时间； Mutex profiling：用于记录因为锁竞争导致的等待或延迟。  pprof的采样方式  runtime/pprof：采集程序（非 Server）的指定区块的运行数据进行分析。 net/http/pprof：基于HTTP Server运行，并且可以采集运行时数据进行分析。 go test：通过运行测试用例，并指定所需标识来进行采集。  pprof的使用 demo代码：
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27  package main import ( &#34;log&#34; &#34;net/http&#34; _ &#34;net/http/pprof&#34; ) func main() { go func() { for { log.]]></description>
</item><item>
    <title>Kong使用笔记</title>
    <link>https://zoulingbin.github.io/posts/kong/</link>
    <pubDate>Thu, 12 Aug 2021 00:07:11 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://zoulingbin.github.io/posts/kong/</guid>
    <description><![CDATA[kong使用笔记]]></description>
</item><item>
    <title>net/http标准库</title>
    <link>https://zoulingbin.github.io/posts/nethttp/</link>
    <pubDate>Tue, 03 Aug 2021 00:36:22 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://zoulingbin.github.io/posts/nethttp/</guid>
    <description><![CDATA[net/http源码解析]]></description>
</item><item>
    <title>3.2 多进程编程</title>
    <link>https://zoulingbin.github.io/posts/3-2%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%BC%96%E7%A8%8B/</link>
    <pubDate>Tue, 29 Jun 2021 17:59:58 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://zoulingbin.github.io/posts/3-2%E5%A4%9A%E8%BF%9B%E7%A8%8B%E7%BC%96%E7%A8%8B/</guid>
    <description><![CDATA[《Go并发编程实战第二版》阅读笔记]]></description>
</item><item>
    <title>GMP调度</title>
    <link>https://zoulingbin.github.io/posts/gmp%E8%B0%83%E5%BA%A6/</link>
    <pubDate>Tue, 29 Jun 2021 17:56:43 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://zoulingbin.github.io/posts/gmp%E8%B0%83%E5%BA%A6/</guid>
    <description><![CDATA[gmp调度分析]]></description>
</item><item>
    <title>Mutex解析</title>
    <link>https://zoulingbin.github.io/posts/mutex/</link>
    <pubDate>Sat, 05 Jun 2021 15:27:17 &#43;0800</pubDate>
    <author>Author</author>
    <guid>https://zoulingbin.github.io/posts/mutex/</guid>
    <description><![CDATA[鸟窝大佬的go并发编程阅读记录，从初版mutex到第四版的源码分析]]></description>
</item></channel>
</rss>
